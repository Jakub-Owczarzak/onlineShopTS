{"version":3,"sources":["routing/AppRoute.enum.ts","redux/action-types/action-types.ts","app/assets/colors/colors.ts","app/components/RatingComponent/RatingComponent.tsx","app/components/products/Promo/Promo.tsx","app/components/products/ProductItem/ProductItem.tsx","app/assets/icons/shape.svg","app/components/products/EmptyCard/EmptyCard.tsx","app/components/UI/Buttons/CloseButton.tsx","app/components/UI/Modals/ProductModal/ProductModal.tsx","app/components/products/ProductsList/ProductList.tsx","context/searchContext.tsx","app/components/UI/SearchBar/SearchaBar.tsx","app/components/UI/CheckBox/CheckBox.tsx","redux/actions/userActionCreator/userActionCreator.ts","app/components/navigation/NavBar/NavBar.tsx","app/components/UI/Pagination/Pagination.tsx","app/view/MainView/MainView.tsx","app/assets/image/Bitmap.svg","app/components/UI/Modals/InfoModal/InfoModal.tsx","providers/ThemeProvider/StyleTheme.tsx","app/components/Login/Login.tsx","routing/AppRoutes.tsx","app/App.tsx","serviceWorker.ts","providers/AppProviders.tsx","redux/reducers/userReducer.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["AppRoute","UsersActionTypes","colors","RatingComponent","rating","totalStars","Box","Array","map","arr","index","sx","color","width","height","Promo","backgroundColor","position","zIndex","top","display","justifyContent","alignItems","Typography","fontSize","ProductItem","isModalElement","item","handleModalOpen","Card","id","borderTopRightRadius","borderTopLeftRadius","promo","active","CardActionArea","disabled","CardMedia","onClick","component","image","alt","filter","CardContent","paddingTop","paddingBottom","gutterBottom","variant","mt","name","description","CardActions","Button","style","fullWidth","EmptyCard","xs","xl","md","Paper","flexDirection","Icon","marginTop","marginBottom","CloseButton","IconButton","containerStyle","left","transform","p","borderRadius","padding","ProductModal","isModalOpen","dataToDisplay","handleModalClose","Modal","open","onClose","right","ProductList","products","React","useState","setisModalOpen","setDataToDisplay","Grid","container","rowSpacing","columnSpacing","length","el","SearchContext","createContext","handleCheckBoxChange","searchBarValue","handleSearchBarChange","Search","styled","theme","border","shape","alpha","palette","common","white","marginLeft","breakpoints","up","spacing","marginRight","SearchIconWrapper","pointerEvents","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","SearchaBar","useContext","margin","placeholder","inputProps","value","onChange","e","CheckBox","FormGroup","FormControlLabel","control","Checkbox","checked","label","loginFailure","message","type","LOGIN_ERROR","payload","fetchLoginUser","userCredenrtials","dispatch","a","fetch","process","method","headers","body","JSON","stringify","response","json","data","statusCode","user","LOGIN","Error","console","log","NavBar","anchorEl","setAnchorEl","useDispatch","useSelector","state","users","isUserLogged","loggedUser","useTheme","matches","useMediaQuery","Boolean","handleClose","mb","flexWrap","textAlign","minWidth","justifySelf","Tooltip","title","event","currentTarget","size","ml","undefined","Avatar","src","avatar","textTransform","to","Login","textDecoration","Menu","PaperProps","elevation","overflow","mr","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","LOGOUT","PaginationComponent","itemsCount","currentPage","itemsPerPage","handlePageChange","pageCount","Math","ceil","Stack","Pagination","page","count","siblingCount","boundaryCount","hideNextButton","hidePrevButton","showFirstButton","showLastButton","renderItem","PaginationItem","components","first","last","MainView","fechtedProducts","setFechtedProducts","fetchedPaginationInfo","setFetchedPaginationInfo","setCurrentPage","searchBarProduct","setSearchBarProduct","stateToCheck","setStateToCheck","isLoading","setIsLoading","fetchProducts","limitPerPage","phrase","items","meta","useEffect","Provider","getAttribute","prevState","pt","minHeight","CircularProgress","totalItems","bgcolor","boxShadow","InfoModal","isOpen","text","RESET_ERROR","createTheme","typography","fontFamily","button","background","default","cardStyle","LoginInput","borderColor","LabelInput","InputLabel","shallowEqual","isFailure","navigate","useNavigate","useForm","register","handleSubmit","errors","formState","handleUserLogin","picture","isFailureStatus","Home","htmlFor","username","required","password","ForgetPassword","AppRoutes","path","element","App","window","location","hostname","match","AppProviders","children","initialUserState","userReducer","action","rootReducer","combineReducers","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","myStore","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84ecbf8b.chunk.js","sourcesContent":["export enum AppRoute {\r\n  Home = \"/\",\r\n  Login = \"/login\",\r\n  ForgetPassword = \"forgetPass\",\r\n}\r\n","export enum UsersActionTypes {\r\n  LOGIN = \"LOGIN\",\r\n  LOGOUT = \"LOGOUT\",\r\n  LOGIN_ERROR = \"LOGIN_ERROR\",\r\n  RESET_ERROR = \"RESET_ERROR\",\r\n}\r\n","export const colors = {\r\n  background: \"##F2F2F2;\",\r\n  greyLight: \"#F0F1F5\",\r\n  greyLight1: \"#E0E2EA\",\r\n  greyLight2: \"#B9BDCF\",\r\n  grey: \"#9194A5\",\r\n  black: \"#1A1B1D\",\r\n  orange: \"#F9A52B\",\r\n  blueLight: \"#4460F7\",\r\n  blue: \"#2140E8\",\r\n  white: \"#FFFFFF\",\r\n};\r\n","import React from \"react\";\r\nimport { colors } from \"../../assets/colors/colors\";\r\nimport Box from \"@mui/material/Box\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport StarBorderOutlinedIcon from \"@mui/icons-material/StarBorderOutlined\";\r\n\r\nexport const RatingComponent = ({\r\n  rating,\r\n  totalStars,\r\n}: {\r\n  rating: number;\r\n  totalStars: number;\r\n}) => {\r\n  return (\r\n    <Box data-testid=\"rating_stars\">\r\n      {[...new Array(totalStars)].map((arr, index) => {\r\n        return index < rating ? (\r\n          <StarIcon\r\n            data-testid=\"star_icon\"\r\n            key={index}\r\n            sx={{ color: colors.orange, width: \"14px\", height: \"13px\" }}\r\n          />\r\n        ) : (\r\n          <StarBorderOutlinedIcon\r\n            data-testid=\"outline_icon\"\r\n            key={index}\r\n            sx={{ color: colors.greyLight2, width: \"14px\", height: \"13px\" }}\r\n          />\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\n\r\nimport { colors } from \"../../../assets/colors/colors\";\r\n\r\nexport const Promo = () => {\r\n  return (\r\n    <Box\r\n      data-testid=\"promo-element\"\r\n      sx={{\r\n        width: \"75px\",\r\n        height: \"24px\",\r\n        backgroundColor: colors.orange,\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n        top: \"20px\",\r\n        color: \"white\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Typography fontSize={14}>Promo</Typography>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Product } from \"../../../../models/products.interface\";\r\nimport { colors } from \"../../../assets/colors/colors\";\r\n\r\nimport { RatingComponent } from \"../../RatingComponent/RatingComponent\";\r\n\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { Promo } from \"../Promo/Promo\";\r\n\r\ninterface ProcductItemProps<T> {\r\n  isModalElement: boolean;\r\n  item: Product | null;\r\n  handleModalOpen?: (item: T) => void;\r\n}\r\n\r\nexport const ProductItem = ({\r\n  isModalElement,\r\n  item,\r\n  handleModalOpen,\r\n}: ProcductItemProps<Product>) => {\r\n  return (\r\n    <>\r\n      {item && (\r\n        <Card\r\n          id=\"product_item\"\r\n          data-testid=\"product_item\"\r\n          sx={\r\n            isModalElement\r\n              ? {\r\n                  width: 1,\r\n                  height: 1,\r\n                }\r\n              : {\r\n                  width: 320,\r\n                  height: 360,\r\n                  borderTopRightRadius: 10,\r\n                  borderTopLeftRadius: 10,\r\n                  position: \"relative\",\r\n                }\r\n          }\r\n        >\r\n          {item.promo && item.active && <Promo />}\r\n          <CardActionArea\r\n            data-testid=\"photo_cardaction_area\"\r\n            disabled={!item.active || isModalElement}\r\n          >\r\n            <CardMedia\r\n              data-testid=\"photo_element\"\r\n              {...(handleModalOpen && { onClick: () => handleModalOpen(item) })}\r\n              component=\"img\"\r\n              height={isModalElement ? 354 : 180}\r\n              image={item.image}\r\n              alt=\"product image\"\r\n              sx={{ filter: `${!item.active && \"grayscale(100%)\"}` }}\r\n            />\r\n          </CardActionArea>\r\n          <CardContent sx={{ paddingTop: \"5px\", paddingBottom: \"5px\" }}>\r\n            <Typography\r\n              data-testid=\"header_element\"\r\n              gutterBottom\r\n              variant={isModalElement ? \"h5\" : \"h6\"}\r\n              component=\"div\"\r\n              mt={isModalElement ? \"24px\" : \"0\"}\r\n            >\r\n              {item.name}\r\n            </Typography>\r\n            <Typography\r\n              data-testid=\"description_element\"\r\n              height={40}\r\n              variant={isModalElement ? \"body1\" : \"body2\"}\r\n              color=\"text.secondary\"\r\n            >\r\n              {item.description}\r\n            </Typography>\r\n          </CardContent>\r\n          {!isModalElement && handleModalOpen && (\r\n            <>\r\n              <CardContent sx={{ paddingTop: \"5px\", paddingBottom: \"0\" }}>\r\n                <RatingComponent rating={item.rating} totalStars={5} />\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  id=\"details_button\"\r\n                  data-testid=\"details_button\"\r\n                  onClick={() => handleModalOpen(item)}\r\n                  style={{\r\n                    backgroundColor: item.active\r\n                      ? colors.blueLight\r\n                      : colors.grey,\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                  fullWidth={true}\r\n                  disabled={!item.active}\r\n                >\r\n                  {item.active ? \"Show details\" : \"Unavailable\"}\r\n                </Button>\r\n              </CardActions>\r\n            </>\r\n          )}\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/shape.c94167f2.svg\";","import React from \"react\";\r\n\r\nimport Paper from \"@mui/material/Paper\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport { Box, Typography } from \"@mui/material\";\r\n\r\nimport Icon from \"../../../assets/icons/shape.svg\";\r\n\r\nexport const EmptyCard = () => {\r\n  return (\r\n    <Box\r\n      data-testid=\"empty_card\"\r\n      width={{ xs: \"320px\", xl: \"600px\" }}\r\n      position={\"absolute\"}\r\n      top={{ xs: \"250px\", md: \"160px\", xl: \"30px\" }}\r\n    >\r\n      <Paper\r\n        sx={{\r\n          height: \"344px\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <CardMedia\r\n          component=\"img\"\r\n          height={45}\r\n          image={Icon}\r\n          alt=\"noFoundIcon\"\r\n          sx={{ width: \"36px\" }}\r\n        />\r\n        <Typography marginTop={2} marginBottom={1} variant=\"h5\">\r\n          Ooops… It’s empty here\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          There are no products on the list\r\n        </Typography>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nexport const CloseButton = () => {\r\n  return (\r\n    <IconButton aria-label=\"close\" color=\"inherit\">\r\n      <CloseIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nimport { Product } from \"models/products.interface\";\r\nimport { ProductItem } from \"app/components/products/ProductItem/ProductItem\";\r\nimport { CloseButton } from \"../../Buttons/CloseButton\";\r\n\r\ninterface ProducModalProps<T> {\r\n  handleModalClose: () => void;\r\n  dataToDisplay: T | null;\r\n  isModalOpen: boolean;\r\n}\r\n\r\nconst containerStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: { xs: \"327px\", md: \"600px\" },\r\n  height: { xs: \"570px\", md: \"530px\" },\r\n  p: 4,\r\n  borderRadius: \"8px\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  padding: 0,\r\n};\r\n\r\nexport const ProductModal = ({\r\n  isModalOpen,\r\n  dataToDisplay,\r\n  handleModalClose,\r\n}: ProducModalProps<Product>) => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        data-testid=\"product_modal\"\r\n        open={isModalOpen}\r\n        onClose={handleModalClose}\r\n      >\r\n        <Box sx={containerStyle}>\r\n          <Box\r\n            onClick={handleModalClose}\r\n            sx={{\r\n              position: \"absolute\",\r\n              zIndex: \"50\",\r\n              top: \"25px\",\r\n              right: \"25px\",\r\n            }}\r\n          >\r\n            <CloseButton />\r\n          </Box>\r\n          <ProductItem isModalElement={true} item={dataToDisplay} />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ProductItem } from \"../ProductItem/ProductItem\";\r\nimport { EmptyCard } from \"../EmptyCard/EmptyCard\";\r\nimport { Product } from \"../../../../models/products.interface\";\r\nimport { ProductModal } from \"../../UI/Modals/ProductModal/ProductModal\";\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nexport const ProductList = ({ products }: { products: Product[] }) => {\r\n  const [isModalOpen, setisModalOpen] = React.useState<boolean>(false);\r\n  const [dataToDisplay, setDataToDisplay] = useState<Product | null>(null);\r\n  const handleModalOpen = (item: Product) => {\r\n    setDataToDisplay(item);\r\n    setisModalOpen(true);\r\n  };\r\n  const handleModalClose = () => setisModalOpen(false);\r\n\r\n  return (\r\n    <>\r\n      {isModalOpen && (\r\n        <ProductModal\r\n          isModalOpen={isModalOpen}\r\n          dataToDisplay={dataToDisplay}\r\n          handleModalClose={handleModalClose}\r\n        />\r\n      )}\r\n      <Grid\r\n        sx={{ padding: { xl: \"0px 40px\" } }}\r\n        container\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        rowSpacing={{ xs: 5, xl: 3 }}\r\n        columnSpacing={{ xs: 4, md: 6, xl: 8 }}\r\n      >\r\n        {products.length > 0 ? (\r\n          products.map((el, index) => (\r\n            <Grid key={index} item>\r\n              <ProductItem\r\n                isModalElement={false}\r\n                handleModalOpen={handleModalOpen}\r\n                item={el}\r\n              />\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <EmptyCard />\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import { createContext } from \"react\";\r\n\r\ninterface CheckBoxContextInterface {\r\n  active: boolean;\r\n  promo: boolean;\r\n  handleCheckBoxChange: (e: React.SyntheticEvent<Element, Event>) => void;\r\n  searchBarValue: string;\r\n  handleSearchBarChange: (\r\n    e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => void;\r\n}\r\n\r\nexport const SearchContext = createContext<CheckBoxContextInterface>({\r\n  active: false,\r\n  promo: false,\r\n  handleCheckBoxChange: () => {},\r\n  searchBarValue: \"\",\r\n  handleSearchBarChange: () => {},\r\n});\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\n\r\nimport { colors } from \"../../../assets/colors/colors\";\r\nimport { SearchContext } from \"context/searchContext\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  border: `1px solid ${colors.greyLight2}`,\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  [theme.breakpoints.up(\"xs\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(2),\r\n    width: \"40%\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  right: \"0\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  width: \"100%\",\r\n  paddingLeft: \"10px\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    transition: theme.transitions.create(\"width\"),\r\n  },\r\n}));\r\n\r\nexport const SearchaBar = () => {\r\n  const { searchBarValue, handleSearchBarChange } = useContext(SearchContext);\r\n\r\n  return (\r\n    <Search sx={{ margin: { xs: \"20px 0\" } }}>\r\n      <SearchIconWrapper>\r\n        <SearchIcon />\r\n      </SearchIconWrapper>\r\n      <StyledInputBase\r\n        placeholder=\"Search\"\r\n        inputProps={{\r\n          \"aria-label\": \"search\",\r\n          \"data-testid\": \"searchBarInputProps\",\r\n          id: \"search_bar\",\r\n        }}\r\n        value={searchBarValue}\r\n        onChange={(e) => handleSearchBarChange(e)}\r\n      />\r\n    </Search>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { Checkbox, FormControlLabel, FormGroup } from \"@mui/material\";\r\n\r\nimport { SearchContext } from \"context/searchContext\";\r\n\r\ninterface CheckBoxProps<T> {\r\n  label: string;\r\n  handleCheck: () => void;\r\n}\r\n\r\nexport const CheckBox = () => {\r\n  const { active, promo, handleCheckBoxChange } = useContext(SearchContext);\r\n  return (\r\n    <FormGroup\r\n      sx={{\r\n        width: { xs: \"100%\", md: \"60%\" },\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        paddingLeft: { xs: \"0\", md: \"20px\" },\r\n      }}\r\n    >\r\n      <FormControlLabel\r\n        onChange={(e) => handleCheckBoxChange(e)}\r\n        control={\r\n          <Checkbox\r\n            {...{ inputProps: { \"aria-label\": \"active\", id: \"active\" } }}\r\n            checked={active}\r\n          />\r\n        }\r\n        label=\"Active\"\r\n      />\r\n      <FormControlLabel\r\n        onChange={(e) => handleCheckBoxChange(e)}\r\n        control={\r\n          <Checkbox\r\n            {...{\r\n              inputProps: {\r\n                \"aria-label\": \"promo\",\r\n                id: \"promo\",\r\n              },\r\n            }}\r\n            checked={promo}\r\n          />\r\n        }\r\n        label=\"Promo\"\r\n      />\r\n    </FormGroup>\r\n  );\r\n};\r\n","import {\r\n  User,\r\n  UserCredentials,\r\n} from \"models/user.interface\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport {\r\n  UserLogin,\r\n  UserLogout,\r\n  LoginFauilure,\r\n  ResetError,\r\n} from \"../../actions/userActionCreator/userAction.interface\";\r\n\r\nimport { UsersActionTypes } from \"../../action-types/action-types\";\r\n\r\nconst userLogin = (user: User): UserLogin => {\r\n  return {\r\n    type: UsersActionTypes.LOGIN,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const userLogout = (): UserLogout => {\r\n  return {\r\n    type: UsersActionTypes.LOGOUT,\r\n  };\r\n};\r\n\r\nconst loginFailure = (message: string): LoginFauilure => {\r\n  return {\r\n    type: UsersActionTypes.LOGIN_ERROR,\r\n    payload: message,\r\n  };\r\n};\r\n\r\nexport const resetError = (): ResetError => {\r\n  return {\r\n    type: UsersActionTypes.RESET_ERROR,\r\n  };\r\n};\r\n\r\nexport const fetchLoginUser = (userCredenrtials: UserCredentials) => {\r\n  return async (dispatch: Dispatch<UserLogin | LoginFauilure>) => {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API_URL + \"/users/login\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(userCredenrtials),\r\n        }\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (data.statusCode === 404 || data.statusCode === 401) {\r\n        dispatch(loginFailure(data.message));\r\n        return;\r\n      }\r\n\r\n      dispatch(userLogin(data));\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        dispatch(loginFailure(error.message));\r\n      }\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppRoute } from \"../../../../routing/AppRoute.enum\";\r\n\r\nimport { SearchaBar } from \"../../UI/SearchBar/SearchaBar\";\r\nimport { CheckBox } from \"app/components/UI/CheckBox/CheckBox\";\r\n\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nimport { colors } from \"../../../assets/colors/colors\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"redux/reducers\";\r\nimport { userLogout } from \"redux/actions/userActionCreator/userActionCreator\";\r\n\r\nexport const NavBar = () => {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const { isUserLogged, loggedUser } = useSelector(\r\n    (state: RootState) => state.users\r\n  );\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(() => theme.breakpoints.up(\"md\"));\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleOpenToolTip = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleUserLogout = () => {\r\n    dispatch(userLogout());\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <>\r\n      <Box\r\n       \r\n        width={1}\r\n        padding={{ xs: \"0 20px\", md: \"0 108px\", xl: \"0 225px\" }}\r\n        mb={{ xs: \"20px\", xl: \"0 \" }}\r\n        position={{ xs: \"fixed\", xl: \"static\" }}\r\n        flexWrap={\"wrap\"}\r\n        zIndex={100}\r\n        sx={{\r\n          height: { xs: \"228px\", md: \"140px\" },\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: {\r\n            xs: \"space-between\",\r\n            md: \"space-around\",\r\n            xl: \"space-between\",\r\n          },\r\n          textAlign: \"center\",\r\n          backgroundColor: colors.white,\r\n        }}\r\n      >\r\n        <Typography fontSize={24} sx={{ minWidth: 100 }}>\r\n          join.tsh.io\r\n        </Typography>\r\n        {matches && (\r\n          <Box\r\n            width={{ xs: \"70%\", md: \"85\" }}\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <SearchaBar />\r\n            <CheckBox />\r\n          </Box>\r\n        )}\r\n        <Box justifySelf={\"flex-end\"}>\r\n          {isUserLogged ? (\r\n            <Tooltip title=\"\">\r\n              <IconButton\r\n                id=\"avatar_icon_button\"\r\n                onClick={handleOpenToolTip}\r\n                size=\"small\"\r\n                sx={{ ml: 2 }}\r\n                aria-controls={open ? \"account-menu\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? \"true\" : undefined}\r\n              >\r\n                <Avatar\r\n                  src={loggedUser?.avatar}\r\n                  sx={{ width: 48, height: 48 }}\r\n                />\r\n              </IconButton>\r\n            </Tooltip>\r\n          ) : (\r\n            <Button\r\n              variant=\"outlined\"\r\n              sx={{\r\n                color: colors.blueLight,\r\n                textTransform: \"none\",\r\n                padding: 0,\r\n              }}\r\n            >\r\n              <Link\r\n                id=\"login_link\"\r\n                to={AppRoute.Login}\r\n                style={{\r\n                  display: \"block\",\r\n                  textDecoration: \"none\",\r\n                  color: colors.blueLight,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  padding: \"5px 25px\",\r\n                  fontSize: \"14px\",\r\n                }}\r\n              >\r\n                Log in\r\n              </Link>\r\n            </Button>\r\n          )}\r\n        </Box>\r\n        {!matches && (\r\n          <Box\r\n            width=\"100%\"\r\n            display=\"flex\"\r\n            flexWrap=\"wrap\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <SearchaBar />\r\n            <CheckBox />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        id=\"account-menu\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        onClick={handleClose}\r\n        PaperProps={{\r\n          elevation: 0,\r\n          sx: {\r\n            overflow: \"visible\",\r\n            filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\r\n            mt: 1.5,\r\n            \"& .MuiAvatar-root\": {\r\n              width: 32,\r\n              height: 32,\r\n              ml: -0.5,\r\n              mr: 1,\r\n            },\r\n          },\r\n        }}\r\n        transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\r\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n      >\r\n        <MenuItem\r\n          id=\"logout_button\"\r\n          onClick={handleUserLogout}\r\n          sx={{ width: \"164px\" }}\r\n        >\r\n          Logout\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport PaginationItem from \"@mui/material/PaginationItem\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\ninterface PaginationComponentProps {\r\n  itemsCount: number;\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  handlePageChange: (event: React.ChangeEvent<unknown>, value: number) => void;\r\n}\r\n\r\nexport const PaginationComponent = ({\r\n  itemsCount,\r\n  currentPage,\r\n  itemsPerPage,\r\n  handlePageChange,\r\n}: PaginationComponentProps) => {\r\n  const pageCount = Math.ceil(itemsCount / itemsPerPage);\r\n\r\n  return (\r\n    <>\r\n      {pageCount > 0 && (\r\n        <Stack sx={{ margin: \"20px 0\" }} spacing={2}>\r\n          <Pagination\r\n          id=\"pagination_component\"\r\n            page={currentPage}\r\n            count={pageCount}\r\n            siblingCount={1}\r\n            boundaryCount={3}\r\n            hideNextButton={true}\r\n            hidePrevButton={true}\r\n            showFirstButton={pageCount > 6}\r\n            showLastButton={pageCount > 6}\r\n            onChange={(event, page) => handlePageChange(event, page)}\r\n            renderItem={(item) => {\r\n              if (pageCount <= 6) {\r\n                return <PaginationItem {...item} />;\r\n              } else if (\r\n                (item.page && item.type === \"first\") ||\r\n                (item.page && item.type === \"last\")\r\n              ) {\r\n                return (\r\n                  <PaginationItem\r\n                    components={{\r\n                      first: (el) => <div>First</div>,\r\n                      last: (el) => <div>Last</div>,\r\n                    }}\r\n                    {...item}\r\n                  />\r\n                );\r\n              } else if (\r\n                (item.page &&\r\n                  item.page <= currentPage + 1 &&\r\n                  item.page >= currentPage - 1) ||\r\n                (item.page && item.page > pageCount - 3)\r\n              ) {\r\n                return <PaginationItem {...item} />;\r\n              } else if (\r\n                (item.page &&\r\n                  item.page <= currentPage + 2 &&\r\n                  item.page >= currentPage - 1) ||\r\n                (item.type === \"end-ellipsis\" && currentPage >= 6)\r\n              ) {\r\n                return <div>...</div>;\r\n              }\r\n            }}\r\n          />\r\n        </Stack>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useMemo, memo } from \"react\";\r\n\r\nimport { Box, CircularProgress } from \"@mui/material\";\r\n\r\nimport { ProductList } from \"app/components/products/ProductsList/ProductList\";\r\nimport { Product } from \"../../../models/products.interface\";\r\nimport { NavBar } from \"app/components/navigation/NavBar/NavBar\";\r\n\r\nimport { EmptyCard } from \"app/components/products/EmptyCard/EmptyCard\";\r\nimport { SearchContext } from \"context/searchContext\";\r\nimport { PaginationComponent } from \"app/components/UI/Pagination/Pagination\";\r\n\r\ninterface StateToCheck {\r\n  active: boolean;\r\n  promo: boolean;\r\n}\r\ninterface PaginationInfo {\r\n  totalItems: number;\r\n  itemCount: number;\r\n  itemsPerPage: number;\r\n  totalPages: number;\r\n  currentPage: number;\r\n}\r\n\r\nexport const MainView = () => {\r\n  const [fechtedProducts, setFechtedProducts] = useState<Product[] | null>(\r\n    null\r\n  );\r\n\r\n  const [fetchedPaginationInfo, setFetchedPaginationInfo] =\r\n    useState<PaginationInfo | null>(null);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const [searchBarProduct, setSearchBarProduct] = useState<string>(\"\");\r\n\r\n  const [stateToCheck, setStateToCheck] = useState<StateToCheck>({\r\n    active: false,\r\n    promo: false,\r\n  });\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const handleCheckBoxChange = (e: React.SyntheticEvent<Element, Event>) => {\r\n    const element = e.currentTarget;\r\n    const label = element.getAttribute(\"aria-label\");\r\n    setCurrentPage(1);\r\n    if (label === \"active\" || label === \"promo\") {\r\n      setStateToCheck((prevState) => ({\r\n        ...prevState,\r\n        [label]: !prevState[label],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSearchBarChange = (\r\n    e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setCurrentPage(1);\r\n    setSearchBarProduct(e.currentTarget.value);\r\n  };\r\n\r\n  const handlePageChange = (\r\n    event: React.ChangeEvent<unknown>,\r\n    value: number\r\n  ) => {\r\n    setCurrentPage(value);\r\n  };\r\n\r\n  const fetchProducts = async (\r\n    page: number,\r\n    limitPerPage: number,\r\n    phrase?: string,\r\n    promo?: boolean,\r\n    active?: boolean\r\n  ) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API_URL +\r\n          `/products?page=${page}&limit=${limitPerPage}${\r\n            phrase ? `&search=${phrase}` : \"\"\r\n          }${promo ? `&promo=${promo}` : \"\"}${\r\n            active ? `&active=${active}` : \"\"\r\n          }`\r\n      );\r\n      const data = await response.json();\r\n      if (data) {\r\n        if (data.items.length > 0 && data.meta) {\r\n          setFechtedProducts(data.items);\r\n          setFetchedPaginationInfo(data.meta);\r\n          setIsLoading(false);\r\n        } else {\r\n          setFechtedProducts(null);\r\n          throw new Error(\"No matches\");\r\n        }\r\n      } else {\r\n        throw new Error(\"No matches\");\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts(currentPage, 8);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProducts(\r\n      currentPage,\r\n      8,\r\n      searchBarProduct,\r\n      stateToCheck.promo,\r\n      stateToCheck.active\r\n    );\r\n  }, [searchBarProduct, stateToCheck, currentPage]);\r\n\r\n  return (\r\n    <>\r\n      <SearchContext.Provider\r\n        value={{\r\n          active: stateToCheck.active,\r\n          promo: stateToCheck.promo,\r\n          searchBarValue: searchBarProduct,\r\n          handleCheckBoxChange,\r\n          handleSearchBarChange,\r\n        }}\r\n      >\r\n        <NavBar />\r\n        <Box\r\n          pt={{ xs: \"260px\", md: \"160px\", xl: \"10px\" }}\r\n          minHeight={\"calc(100vh - 140px)\"}\r\n          position=\"relative\"\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          {isLoading && <CircularProgress data-testid=\"circular_progress\" />}\r\n          {fechtedProducts && !isLoading && (\r\n            <ProductList products={fechtedProducts} />\r\n          )}\r\n\r\n          {!fechtedProducts && !isLoading && <EmptyCard />}\r\n\r\n          {fetchedPaginationInfo && fechtedProducts && !isLoading && (\r\n            <PaginationComponent\r\n              itemsCount={fetchedPaginationInfo.totalItems}\r\n              currentPage={currentPage}\r\n              handlePageChange={handlePageChange}\r\n              itemsPerPage={8}\r\n            />\r\n          )}\r\n        </Box>\r\n      </SearchContext.Provider>\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Bitmap.1c8067bc.svg\";","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nimport { resetError } from \"redux/actions/userActionCreator/userActionCreator\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 300,\r\n  borderRadius: \"8px\",\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid red\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n\r\ninterface InfoModalProps {\r\n  isOpen: boolean;\r\n  text: string;\r\n}\r\n\r\nexport const InfoModal = ({ isOpen, text }: InfoModalProps) => {\r\n  const dispatch = useDispatch();\r\n  const handleClose = () => dispatch(resetError());\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        id=\"infoModal\"\r\n        open={isOpen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            {text}\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import { createTheme } from \"@mui/material/styles\";\r\nimport { colors } from \"app/assets/colors/colors\";\r\n\r\nlet theme = createTheme({\r\n  typography: {\r\n    fontFamily: \"Nunito\",\r\n    button: {\r\n      textTransform: \"none\",\r\n    },\r\n  },\r\n  palette: {\r\n    background: {\r\n      default: colors.greyLight,\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Card,\r\n  Box,\r\n  CardMedia,\r\n  useMediaQuery,\r\n  Button,\r\n  FormGroup,\r\n  Typography,\r\n  InputLabel,\r\n  alpha,\r\n  InputBase,\r\n  styled,\r\n} from \"@mui/material\";\r\n\r\nimport { colors } from \"../../assets/colors/colors\";\r\nimport picture from \"../../assets/image/Bitmap.svg\";\r\nimport { AppRoute } from \"routing/AppRoute.enum\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchLoginUser } from \"redux/actions/userActionCreator/userActionCreator\";\r\nimport { UserCredentials } from \"models/user.interface\";\r\nimport { InfoModal } from \"../UI/Modals/InfoModal/InfoModal\";\r\nimport { RootState } from \"redux/reducers\";\r\nimport theme from \"providers/ThemeProvider/StyleTheme\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"100vh\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nconst cardStyle = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nconst LoginInput = styled(InputBase)(({ theme }) => ({\r\n  \"& .MuiInputBase-input\": {\r\n    marginBottom: \"22px\",\r\n    borderRadius: \"8px\",\r\n    position: \"relative\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\r\n      \"border-color\",\r\n      \"background-color\",\r\n      \"box-shadow\",\r\n    ]),\r\n    \"&:focus\": {\r\n      boxShadow: `${alpha(colors.blueLight, 0.9)} 0 0 0 0.1rem`,\r\n      borderColor: colors.blue,\r\n    },\r\n  },\r\n}));\r\nconst LabelInput = styled(InputLabel)(({ theme }) => ({\r\n  marginBottom: \"8px\",\r\n  fontSize: \"14px\",\r\n}));\r\n\r\nexport const Login = () => {\r\n  const { isFailure, isUserLogged } = useSelector(\r\n    (state: RootState) => state.users,\r\n    shallowEqual\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n\r\n    formState: { errors },\r\n  } = useForm<UserCredentials>();\r\n\r\n  const matches = useMediaQuery(() => theme.breakpoints.up(\"md\"));\r\n\r\n  const handleUserLogin = async (data: UserCredentials) => {\r\n    dispatch(fetchLoginUser(data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isUserLogged) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [isUserLogged]);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={containerStyle}>\r\n        <Card sx={cardStyle}>\r\n          {matches && (\r\n            <Box sx={{ width: \"600px\" }} mr={{ md: \"48px\", xl: \"128px\" }}>\r\n              <CardMedia component=\"img\" image={picture} alt=\"green iguana\" />\r\n            </Box>\r\n          )}\r\n          {isFailure.isFailureStatus && (\r\n            <InfoModal\r\n              data-testid=\"infoModal\"\r\n              text={isFailure.message}\r\n              isOpen={isFailure.isFailureStatus}\r\n            />\r\n          )}\r\n\r\n          <Box\r\n            sx={{\r\n              height: \"100%\",\r\n              position: \"relative\",\r\n              width: { xs: \"100%\", md: \"60%\" },\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: { xs: \"center\", md: \"flex-start\" },\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <Link\r\n              to={AppRoute.Home}\r\n              style={{\r\n                textDecoration: \"none\",\r\n                minWidth: 100,\r\n                position: \"absolute\",\r\n                top: \"40px\",\r\n                left: \"24px\",\r\n                fontSize: \"24px\",\r\n                color: \"black\",\r\n              }}\r\n            >\r\n              join.tsh.io\r\n            </Link>\r\n\r\n            <FormGroup\r\n              sx={{\r\n                width: { xs: \"100%\", md: \"400px\", xl: \"500px\" },\r\n                padding: { xs: \"24px\" },\r\n              }}\r\n            >\r\n              <Typography mb=\"53px\" variant=\"h3\">\r\n                Login\r\n              </Typography>\r\n              <LabelInput htmlFor=\"userName\">Username</LabelInput>\r\n              <LoginInput\r\n                id=\"userNameInput\"\r\n                data-testid=\"userNameInput\"\r\n                inputProps={{ \"data-testid\": \"userNameInputProps\" }}\r\n                sx={{ color: errors.username && \"red\" }}\r\n                {...register(\"username\", { required: true })}\r\n                fullWidth={true}\r\n                placeholder={\r\n                  errors.password ? \"User name is required\" : \"Enter username\"\r\n                }\r\n              />\r\n              <LabelInput htmlFor=\"password\">Password</LabelInput>\r\n              <LoginInput\r\n                id=\"passwordInput\"\r\n                data-testid=\"passwordInput\"\r\n                inputProps={{ \"data-testid\": \"passwordInputProps\" }}\r\n                sx={{ color: errors.password && \"red\" }}\r\n                {...register(\"password\", { required: true })}\r\n                type=\"password\"\r\n                placeholder={\r\n                  errors.password ? \"Password is required\" : \"Enter password\"\r\n                }\r\n              />\r\n\r\n              <Button\r\n                id=\"submitButton\"\r\n                data-testid=\"submitButton\"\r\n                onClick={handleSubmit(handleUserLogin)}\r\n                type=\"submit\"\r\n                sx={{\r\n                  height: \"48px\",\r\n                  marginTop: \"34px\",\r\n                  backgroundColor: colors.blueLight,\r\n                  fontSize: \"14px\",\r\n                  color: \"white\",\r\n                }}\r\n                variant=\"contained\"\r\n                fullWidth={false}\r\n              >\r\n                Log in\r\n              </Button>\r\n              <Link\r\n                to={AppRoute.ForgetPassword}\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  minWidth: 100,\r\n                  marginTop: \"16px\",\r\n                  fontSize: \"14px\",\r\n                  color: colors.grey,\r\n                }}\r\n              >\r\n                Forgot password?\r\n              </Link>\r\n            </FormGroup>\r\n          </Box>\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\n\r\nimport { AppRoute } from \"./AppRoute.enum\";\r\nimport { MainView } from \"app/view/MainView/MainView\";\r\nimport { Login } from \"app/components/Login/Login\";\r\n\r\nexport const AppRoutes = () => {\r\n  return (\r\n    <>\r\n      <Routes>\r\n        <Route path={AppRoute.Home} element={<MainView />} />\r\n        <Route path={AppRoute.Login} element={<Login />} />\r\n        <Route path=\"*\" element={<MainView />} />\r\n      </Routes>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { AppRoutes } from \"routing/AppRoutes\";\r\n\r\nexport const App = () => {\r\n  return <AppRoutes />;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport { AppProvidersProps } from \"./AppProviders.types\";\r\n\r\nexport const AppProviders = ({ children }: AppProvidersProps) => (\r\n  <Router>{children}</Router>\r\n);\r\n","import { User } from \"../../models/user.interface\";\r\n\r\nimport { UserActions } from \"../actions/userActionCreator/userAction.interface\";\r\n\r\nimport { UsersActionTypes } from \"../action-types/action-types\";\r\n\r\nexport interface UsersState {\r\n  isUserLogged: boolean;\r\n  loggedUser: User | null;\r\n  users: User[];\r\n  isFailure: {\r\n    isFailureStatus: boolean;\r\n    message: string;\r\n  };\r\n}\r\n\r\nexport const initialUserState: UsersState = {\r\n  isUserLogged: false,\r\n  loggedUser: null,\r\n  users: [],\r\n  isFailure: {\r\n    isFailureStatus: false,\r\n    message: \"string\",\r\n  },\r\n};\r\n\r\nconst userReducer = (\r\n  state = initialUserState,\r\n  action: UserActions\r\n): UsersState => {\r\n  switch (action.type) {\r\n    case UsersActionTypes.LOGIN:\r\n      return {\r\n        ...state,\r\n        isUserLogged: true,\r\n        loggedUser: action.payload,\r\n        isFailure: {\r\n          ...state.isFailure,\r\n          isFailureStatus: false,\r\n          message: \"\",\r\n        },\r\n      };\r\n    case UsersActionTypes.LOGOUT:\r\n      return { ...state, loggedUser: null, isUserLogged: false };\r\n    case UsersActionTypes.LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        loggedUser: null,\r\n        isUserLogged: false,\r\n        isFailure: {\r\n          ...state.isFailure,\r\n          isFailureStatus: true,\r\n          message: action.payload,\r\n        },\r\n      };\r\n\r\n    case UsersActionTypes.RESET_ERROR:\r\n      return {\r\n        ...state,\r\n        isFailure: {\r\n          ...state.isFailure,\r\n          isFailureStatus: false,\r\n          message: \"\",\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  users: userReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { applyMiddleware, CombinedState, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers, { RootState } from \"./reducers\";\r\nimport { UsersState } from \"./reducers/userReducer\";\r\n\r\nconst store = (state: RootState) =>\r\n  createStore(reducers, state, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { App } from \"./app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.css\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport theme from \"providers/ThemeProvider/StyleTheme\";\r\nimport { AppProviders } from \"providers/AppProviders\";\r\nimport { initialUserState } from \"./redux/reducers/userReducer\";\r\nimport myStore from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <AppProviders>\r\n    <Provider store={myStore({ users: initialUserState })}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </AppProviders>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}